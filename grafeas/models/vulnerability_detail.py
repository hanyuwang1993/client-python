# coding: utf-8

"""
    grafeas.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class VulnerabilityDetail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cpe_uri': 'str',
        'package': 'str',
        'min_affected_version': 'PackageVersion',
        'max_affected_version': 'PackageVersion',
        'severity_name': 'str',
        'description': 'str',
        'fixed_location': 'VulnerabilityVulnerabilityLocation',
        'package_type': 'str',
        'is_obsolete': 'bool',
        'source_update_time': 'datetime',
        'source': 'str',
        'vendor': 'str'
    }

    attribute_map = {
        'cpe_uri': 'cpeUri',
        'package': 'package',
        'min_affected_version': 'minAffectedVersion',
        'max_affected_version': 'maxAffectedVersion',
        'severity_name': 'severityName',
        'description': 'description',
        'fixed_location': 'fixedLocation',
        'package_type': 'packageType',
        'is_obsolete': 'isObsolete',
        'source_update_time': 'sourceUpdateTime',
        'source': 'source',
        'vendor': 'vendor'
    }

    def __init__(self, cpe_uri=None, package=None, min_affected_version=None, max_affected_version=None, severity_name=None, description=None, fixed_location=None, package_type=None, is_obsolete=None, source_update_time=None, source=None, vendor=None):  # noqa: E501
        """VulnerabilityDetail - a model defined in Swagger"""  # noqa: E501

        self._cpe_uri = None
        self._package = None
        self._min_affected_version = None
        self._max_affected_version = None
        self._severity_name = None
        self._description = None
        self._fixed_location = None
        self._package_type = None
        self._is_obsolete = None
        self._source_update_time = None
        self._source = None
        self._vendor = None
        self.discriminator = None

        if cpe_uri is not None:
            self.cpe_uri = cpe_uri
        if package is not None:
            self.package = package
        if min_affected_version is not None:
            self.min_affected_version = min_affected_version
        if max_affected_version is not None:
            self.max_affected_version = max_affected_version
        if severity_name is not None:
            self.severity_name = severity_name
        if description is not None:
            self.description = description
        if fixed_location is not None:
            self.fixed_location = fixed_location
        if package_type is not None:
            self.package_type = package_type
        if is_obsolete is not None:
            self.is_obsolete = is_obsolete
        if source_update_time is not None:
            self.source_update_time = source_update_time
        if source is not None:
            self.source = source
        if vendor is not None:
            self.vendor = vendor

    @property
    def cpe_uri(self):
        """Gets the cpe_uri of this VulnerabilityDetail.  # noqa: E501

        Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.  # noqa: E501

        :return: The cpe_uri of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._cpe_uri

    @cpe_uri.setter
    def cpe_uri(self, cpe_uri):
        """Sets the cpe_uri of this VulnerabilityDetail.

        Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.  # noqa: E501

        :param cpe_uri: The cpe_uri of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._cpe_uri = cpe_uri

    @property
    def package(self):
        """Gets the package of this VulnerabilityDetail.  # noqa: E501

        Required. The name of the package where the vulnerability was found.  # noqa: E501

        :return: The package of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this VulnerabilityDetail.

        Required. The name of the package where the vulnerability was found.  # noqa: E501

        :param package: The package of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._package = package

    @property
    def min_affected_version(self):
        """Gets the min_affected_version of this VulnerabilityDetail.  # noqa: E501

        The min version of the package in which the vulnerability exists.  # noqa: E501

        :return: The min_affected_version of this VulnerabilityDetail.  # noqa: E501
        :rtype: PackageVersion
        """
        return self._min_affected_version

    @min_affected_version.setter
    def min_affected_version(self, min_affected_version):
        """Sets the min_affected_version of this VulnerabilityDetail.

        The min version of the package in which the vulnerability exists.  # noqa: E501

        :param min_affected_version: The min_affected_version of this VulnerabilityDetail.  # noqa: E501
        :type: PackageVersion
        """

        self._min_affected_version = min_affected_version

    @property
    def max_affected_version(self):
        """Gets the max_affected_version of this VulnerabilityDetail.  # noqa: E501

        The max version of the package in which the vulnerability exists.  # noqa: E501

        :return: The max_affected_version of this VulnerabilityDetail.  # noqa: E501
        :rtype: PackageVersion
        """
        return self._max_affected_version

    @max_affected_version.setter
    def max_affected_version(self, max_affected_version):
        """Sets the max_affected_version of this VulnerabilityDetail.

        The max version of the package in which the vulnerability exists.  # noqa: E501

        :param max_affected_version: The max_affected_version of this VulnerabilityDetail.  # noqa: E501
        :type: PackageVersion
        """

        self._max_affected_version = max_affected_version

    @property
    def severity_name(self):
        """Gets the severity_name of this VulnerabilityDetail.  # noqa: E501

        The severity (eg: distro assigned severity) for this vulnerability.  # noqa: E501

        :return: The severity_name of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._severity_name

    @severity_name.setter
    def severity_name(self, severity_name):
        """Sets the severity_name of this VulnerabilityDetail.

        The severity (eg: distro assigned severity) for this vulnerability.  # noqa: E501

        :param severity_name: The severity_name of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._severity_name = severity_name

    @property
    def description(self):
        """Gets the description of this VulnerabilityDetail.  # noqa: E501

        A vendor-specific description of this note.  # noqa: E501

        :return: The description of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VulnerabilityDetail.

        A vendor-specific description of this note.  # noqa: E501

        :param description: The description of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def fixed_location(self):
        """Gets the fixed_location of this VulnerabilityDetail.  # noqa: E501

        The fix for this specific package version.  # noqa: E501

        :return: The fixed_location of this VulnerabilityDetail.  # noqa: E501
        :rtype: VulnerabilityVulnerabilityLocation
        """
        return self._fixed_location

    @fixed_location.setter
    def fixed_location(self, fixed_location):
        """Sets the fixed_location of this VulnerabilityDetail.

        The fix for this specific package version.  # noqa: E501

        :param fixed_location: The fixed_location of this VulnerabilityDetail.  # noqa: E501
        :type: VulnerabilityVulnerabilityLocation
        """

        self._fixed_location = fixed_location

    @property
    def package_type(self):
        """Gets the package_type of this VulnerabilityDetail.  # noqa: E501

        The type of package; whether native or non native(ruby gems, node.js packages etc).  # noqa: E501

        :return: The package_type of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this VulnerabilityDetail.

        The type of package; whether native or non native(ruby gems, node.js packages etc).  # noqa: E501

        :param package_type: The package_type of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._package_type = package_type

    @property
    def is_obsolete(self):
        """Gets the is_obsolete of this VulnerabilityDetail.  # noqa: E501

        Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.  # noqa: E501

        :return: The is_obsolete of this VulnerabilityDetail.  # noqa: E501
        :rtype: bool
        """
        return self._is_obsolete

    @is_obsolete.setter
    def is_obsolete(self, is_obsolete):
        """Sets the is_obsolete of this VulnerabilityDetail.

        Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.  # noqa: E501

        :param is_obsolete: The is_obsolete of this VulnerabilityDetail.  # noqa: E501
        :type: bool
        """

        self._is_obsolete = is_obsolete

    @property
    def source_update_time(self):
        """Gets the source_update_time of this VulnerabilityDetail.  # noqa: E501

        The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.  # noqa: E501

        :return: The source_update_time of this VulnerabilityDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._source_update_time

    @source_update_time.setter
    def source_update_time(self, source_update_time):
        """Sets the source_update_time of this VulnerabilityDetail.

        The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.  # noqa: E501

        :param source_update_time: The source_update_time of this VulnerabilityDetail.  # noqa: E501
        :type: datetime
        """

        self._source_update_time = source_update_time

    @property
    def source(self):
        """Gets the source of this VulnerabilityDetail.  # noqa: E501

        The source from which the information in this Detail was obtained.  # noqa: E501

        :return: The source of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this VulnerabilityDetail.

        The source from which the information in this Detail was obtained.  # noqa: E501

        :param source: The source of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def vendor(self):
        """Gets the vendor of this VulnerabilityDetail.  # noqa: E501

        The name of the vendor of the product.  # noqa: E501

        :return: The vendor of this VulnerabilityDetail.  # noqa: E501
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this VulnerabilityDetail.

        The name of the vendor of the product.  # noqa: E501

        :param vendor: The vendor of this VulnerabilityDetail.  # noqa: E501
        :type: str
        """

        self._vendor = vendor

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VulnerabilityDetail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VulnerabilityDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
